src_dir      = {{ src_dir }}
inc_dir      = {{ inc_dir }}
build_dir    = {{ build_dir }}
inc          = {{ inc_str }} 
define_str   = {{ define_str }}
binary       = {{ binary_file }}
lib_long_str = {{ lib_long_str }}
lib_link_str = {{ lib_link_str }}
lib_dir_str  = {{ lib_dir_str }}
compiler_dir = {{ compiler_dir }}

depends_dir = $(build_dir)/depends
objects_dir = $(build_dir)/objects
process_dir = $(build_dir)/process

include $(compiler_dir)/color.mk



src    = $(shell find $(src_dir) -name '*.cpp')
src_in = $(shell find $(src_dir) -name '*.cpp.in')

#inc_in = $(shell find $(inc_dir) -name '*.hpp.in')

#inc_processed = $(patsubst $(src_dir)/%.cpp.in, $(build_dir)/processed/include/%.hpp, $(inc_in))

#src_processed = $(patsubst $(src_dir)/%.cpp.in, $(build_dir)/processed/src/%.cpp,     $(src_in))
#obj_processed = $(patsubst $(src_dir)/%.cpp.in, $(build_dir)/objects/%.cpp.o, $(src_in))
#obj           = $(patsubst $(src_dir)/%.cpp,    $(build_dir)/objects/%.cpp.o, $(src))

CFLAGS = -g -std=c++0x -Wno-format-security

CARGS = $(define_str) $(CFLAGS) $(inc) -lpthread

.PHONY: all

all: $(binary)
	@bash -c "echo -e \"$(COLOR_BLUE)$(build_dir)$(COLOR_RESET)\""


MAKEDEPEND = $(CC) -c $(CARGS) -MM $< -MF $(build_dir)/depends/$*.cpp.d -MT $(build_dir)/objects/$*.cpp.o

include $(compiler_dir)/cpp_library.mk



$(binary): $(lib_long_str)

$(binary): $(obj)
	@bash -c "echo -e \"$(COLOR_BLUE)build $@$(COLOR_RESET)\""
	@g++ $< -o $@ $(lib_dir_str) $(lib_link_str) $(lib_link_str) $(lib_link_str) -lpthread

clean:
	@rm -rf $(process_dir)/*
	@rm -rf $(objects_dir)/*
	@rm -rf $(depends_dir)/*
	@rm -rf $(binary)/*

include $(compiler_dir)/help.mk
include $(compiler_dir)/depend.mk


