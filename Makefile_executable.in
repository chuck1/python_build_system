src_dir    = {{ src_dir }}
inc_dir    = {{ inc_dir }}
build_dir  = {{ build_dir }}
inc        = {{ inc_str }} 
define_str = {{ define_str }}
binary_file = {{ binary_file }}
lib_long_str = {{ lib_long_str }}
lib_link_str = {{ lib_link_str }}
lib_dir_str  = {{ lib_dir_str }}
depend_file  = $(build_dir)/.depend

COLOR_RESET  = \e[0m
COLOR_BLUE   = \e[0;34m
COLOR_GREEN  = \x1b[32;01m
COLOR_RED    = \x1b[31;01m
COLOR_YELLOW = \x1b[33;01m

src    = $(shell find $(src_dir) -name '*.cpp')
src_in = $(shell find $(src_dir) -name '*.cpp.in')

#inc_in = $(shell find $(inc_dir) -name '*.hpp.in')

#inc_processed = $(patsubst $(src_dir)/%.cpp.in, $(build_dir)/processed/include/%.hpp, $(inc_in))

src_processed = $(patsubst $(src_dir)/%.cpp.in, $(build_dir)/processed/src/%.cpp,     $(src_in))
obj_processed = $(patsubst $(src_dir)/%.cpp.in, $(build_dir)/objects/%.cpp.o, $(src_in))
obj           = $(patsubst $(src_dir)/%.cpp,    $(build_dir)/objects/%.cpp.o, $(src))

all: $(binary_file)

s = $(COLOR_BLUE)build$(COLOR_RESET)

cpp_flags = -g -std=c++0x -Wno-format-security


CARGS = $(define_str) $(cpp_flags) $(inc) -lpthread

MAKEDEPEND = $(CC) -c $(CARGS) -MM $< -MF $(build_dir)/depends/$*.cpp.d -MT $(build_dir)/objects/$*.cpp.o

$(obj): $(build_dir)/objects/%.cpp.o: $(src_dir)/%.cpp
	@bash -c "echo -e \"$(COLOR_BLUE)build $@$(COLOR_RESET)\""
	@mkdir -p $(dir $@)
	@mkdir -p $(dir $(build_dir)/depends/$*.cpp.d)
	@$(MAKEDEPEND)
	@g++ -c $^ -o $@ $(CARGS) 

$(obj_processed): $(build_dir)/objects/%.cpp.o: $(build_dir)/processed/src/%.cpp
	@echo $(COLOR_BLUE)build $@$(COLOR_RESET)
	@mkdir -p $(dir $@)
	@$(MAKEDEPEND)
	@g++ -c $^ -o $@ $(inc) $(CARGS)

$(binary_file): $(lib_long_str)

$(binary_file): $(obj)
	@bash -c "echo -e \"$(COLOR_BLUE)build $@$(COLOR_RESET)\""
	@g++ $< -o $@ $(lib_dir_str) $(lib_link_str) $(lib_link_str) $(lib_link_str) -lpthread

clean:
	rm -rf $(build_dir)/*

depend: $(depend_file)

$(depend_file): $(src)
	@bash -c "echo -e \"$(COLOR_BLUE)build deps for $(binary_file)$(COLOR_RESET)\""
	@rm -f $(depend_file)
	@$(CC) $(CARGS) -MM $^ -MF $(depend_file)

include $(depend_file)


