src_dir    = {{ src_dir }}
inc_dir    = {{ inc_dir }}
build_dir  = {{ build_dir }}
inc        = {{ inc_str }} 
define_str = {{ define_str }}
binary     = {{ binary_file }}

depend_file = $(build_dir)/.depend

CC = g++

COLOR_RESET  = \e[0m
COLOR_BLUE   = \e[0;34m
COLOR_GREEN  = \x1b[32;01m
COLOR_RED    = \x1b[31;01m
COLOR_YELLOW = \x1b[33;01m

src    = $(shell find $(src_dir) -name '*.cpp')
src_in = $(shell find $(src_dir) -name '*.cpp.in')

#inc_in = $(shell find $(inc_dir) -name '*.hpp.in')

#inc_processed = $(patsubst $(src_dir)/%.cpp.in, $(build_dir)/processed/include/%.hpp, $(inc_in))

src_processed = $(patsubst $(src_dir)/%.cpp.in, $(build_dir)/processed/src/%.cpp, $(src_in))
obj_processed = $(patsubst $(src_dir)/%.cpp.in, $(build_dir)/objects/%.cpp.o,     $(src_in))
obj           = $(patsubst $(src_dir)/%.cpp,    $(build_dir)/objects/%.cpp.o,     $(src))

all: $(binary)

s = $(COLOR_BLUE)build$(COLOR_RESET)

CFLAGS = -std=c++0x -Wno-format-security

CARGS = $(CFLAGS) $(inc) $(define_str)

$(obj): $(build_dir)/objects/%.cpp.o: $(src_dir)/%.cpp
	@bash -c "echo -e \"$(COLOR_BLUE)build $@$(COLOR_RESET)\""
	@mkdir -p $(dir $@)
	@$(CC) -c $(CARGS) -o $@ $<

$(obj_processed): $(build_dir)/objects/%.cpp.o: $(build_dir)/processed/src/%.cpp
	@bash -c "echo -e \"$(COLOR_BLUE)build $@$(COLOR_RESET)\""
	@mkdir -p $(dir $@)
	@$(CC) -c $(CARGS) -o $@ $<

$(binary): $(obj)
	@bash -c "echo -e \"$(COLOR_BLUE)build $@$(COLOR_RESET)\""
	@ar rcs $@ $^

clean:
	@rm -rf $(build_dir)/*

depend: $(depend_file)

$(depend_file): $(src)
	@bash -c "echo -e \"$(COLOR_BLUE)build deps for $(binary)$(COLOR_RESET)\""
	@rm -f $(depend_file)
	$(CC) -c $(CARGS) -MM $^ -MF $(depend_file)

#include $(depend_file)
-include $(wildcard *.d)




